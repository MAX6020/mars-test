{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkov5\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\mars-test\\\\src\\\\page\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport \"./Main.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst chunkSize = 50 * 1024 * 1024;\nconst Main = () => {\n  _s();\n  const [dropzoneActive, setDropzoneActive] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [currentFileIndex, setCurrentFileIndex] = useState(null);\n  const [lastUploadFileIndex, setLastUploadFileIndex] = useState(null);\n  const [currnetChunkIndex, setCurrentChunckIndex] = useState(null);\n  function handleDrop(e) {\n    e.preventDefault();\n    setFiles([...files, ...e.dataTransfer.files]);\n  }\n  function readAndUploadChunckIndex() {\n    const reader = new FileReader();\n    const file = files[currentFileIndex];\n    if (!file) {\n      return;\n    }\n    const from = currnetChunkIndex * chunkSize;\n    const to = from + chunkSize;\n    const blob = file.slice(from, to);\n    reader.onload = e => uploadChunck(e);\n    reader.readAsDataURL(blob);\n  }\n  function uploadChunck(readerEvent) {\n    const file = files[currentFileIndex];\n    const data = readerEvent.target.result;\n    const params = new URLSearchParams();\n    params.set('name', file.name);\n    params.set('size', file.size);\n    params.set('currentChunckIndex', currnetChunkIndex);\n    params.set('totalChunk', Math.ceil(file.size / chunkSize));\n    const headers = {\n      'Content-Type': 'application/octet-stream'\n    };\n    const url = 'http//localhost:4001/upload?' + params.toString();\n    axios.post(url, data, {\n      headers\n    });\n    then(response => {});\n  }\n  useEffect(() => {\n    if (files.length > 0) {\n      if (currentFileIndex === null) {\n        setCurrentFileIndex(lastUploadFileIndex === null ? 0 : lastUploadFileIndex + 1);\n      }\n    }\n  }, [files.length]);\n  useEffect(() => {\n    if (currentFileIndex !== null) {\n      setCurrentChunckIndex(0);\n    }\n  }, [currentFileIndex]);\n  useEffect(() => {\n    if (currnetChunckIndex !== null) {}\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"head\",\n          children: \"Uploader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploader\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          className: \"btn\",\n          id: \"btn__open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onDragOver: e => {\n            setDropzoneActive(true);\n            e.preventDefault();\n          },\n          onDragLeave: e => {\n            setDropzoneActive(false);\n            e.preventDefault();\n          },\n          onDrop: e => handleDrop(e),\n          className: \"dropzone \" + (dropzoneActive ? \"active\" : \"\"),\n          children: \"Drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"K3AuMfOvibatQUoIHjt4XgMwi/U=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","chunkSize","Main","_s","dropzoneActive","setDropzoneActive","files","setFiles","currentFileIndex","setCurrentFileIndex","lastUploadFileIndex","setLastUploadFileIndex","currnetChunkIndex","setCurrentChunckIndex","handleDrop","e","preventDefault","dataTransfer","readAndUploadChunckIndex","reader","FileReader","file","from","to","blob","slice","onload","uploadChunck","readAsDataURL","readerEvent","data","target","result","params","URLSearchParams","set","name","size","Math","ceil","headers","url","toString","post","then","response","length","currnetChunckIndex","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","htmlFor","onDragOver","onDragLeave","onDrop","_c","$RefreshReg$"],"sources":["C:/Users/mkov5/OneDrive/Рабочий стол/mars-test/src/page/Main.jsx"],"sourcesContent":["import \"./Main.css\"\r\nimport {useEffect, useState} from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst chunkSize = 50 * 1024 * 1024;\r\n\r\nconst Main = () => {\r\n    const [dropzoneActive, setDropzoneActive] = useState(false);\r\n    const [files,setFiles] = useState([]);\r\n    const [currentFileIndex, setCurrentFileIndex] = useState(null)\r\n    const [lastUploadFileIndex, setLastUploadFileIndex] = useState(null)\r\n    const [currnetChunkIndex, setCurrentChunckIndex] = useState(null)\r\n\r\n    function handleDrop(e){\r\n        e.preventDefault();\r\n        setFiles([...files, ...e.dataTransfer.files]);\r\n    }\r\n\r\n    function readAndUploadChunckIndex() {\r\n        const reader = new FileReader();\r\n        const file = files[currentFileIndex];\r\n        if (!file){\r\n            return;\r\n        }\r\n        const from = currnetChunkIndex * chunkSize;\r\n        const to = from + chunkSize;\r\n        const blob = file.slice(from, to);\r\n        reader.onload = e => uploadChunck(e);\r\n        reader.readAsDataURL(blob);\r\n    }\r\n\r\n    function uploadChunck(readerEvent){\r\n        const file = files[currentFileIndex];\r\n        const data = readerEvent.target.result;\r\n        const params = new URLSearchParams();\r\n        params.set('name', file.name);\r\n        params.set('size', file.size);\r\n        params.set('currentChunckIndex', currnetChunkIndex);\r\n        params.set('totalChunk', Math.ceil(file.size / chunkSize));\r\n        const headers = {'Content-Type': 'application/octet-stream'};\r\n        const url = 'http//localhost:4001/upload?'+params.toString();\r\n        axios.post(url, data,{headers});\r\n            then(response => {\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if (files.length > 0){\r\n            if (currentFileIndex === null){\r\n                setCurrentFileIndex(\r\n                    lastUploadFileIndex === null ? 0 : lastUploadFileIndex + 1\r\n                );\r\n            }\r\n        }\r\n    },[files.length]);\r\n\r\n    useEffect(() => {\r\n        if (currentFileIndex !== null){\r\n            setCurrentChunckIndex(0)\r\n        }\r\n    }, [currentFileIndex]);\r\n\r\n    useEffect(() => {\r\n        if (currnetChunckIndex !==null){\r\n\r\n        }\r\n    })\r\n    return (  \r\n    <>\r\n    <header className=\"header\">\r\n        <div className=\"container\">\r\n            <h1 className=\"head\">Uploader</h1>\r\n        </div>\r\n    </header>\r\n    <main className=\"container\">\r\n        <div className=\"uploader\">\r\n            <input type=\"file\" id=\"file\"/>\r\n            <label htmlFor=\"file\"  className=\"btn\" id=\"btn__open\">Open</label>\r\n            <div onDragOver={e => {setDropzoneActive(true); e.preventDefault();}} \r\n                onDragLeave={e => {setDropzoneActive(false); e.preventDefault();}}\r\n                onDrop={e => handleDrop(e)}\r\n                className={ \"dropzone \" + (dropzoneActive ? \"active\" : \"\")}>Drop files here</div>\r\n        </div>\r\n    </main>\r\n    </>\r\n);\r\n}\r\n \r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,SAAS,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACW,KAAK,EAACC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACe,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACiB,iBAAiB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEjE,SAASmB,UAAUA,CAACC,CAAC,EAAC;IAClBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGS,CAAC,CAACE,YAAY,CAACX,KAAK,CAAC,CAAC;EACjD;EAEA,SAASY,wBAAwBA,CAAA,EAAG;IAChC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/B,MAAMC,IAAI,GAAGf,KAAK,CAACE,gBAAgB,CAAC;IACpC,IAAI,CAACa,IAAI,EAAC;MACN;IACJ;IACA,MAAMC,IAAI,GAAGV,iBAAiB,GAAGX,SAAS;IAC1C,MAAMsB,EAAE,GAAGD,IAAI,GAAGrB,SAAS;IAC3B,MAAMuB,IAAI,GAAGH,IAAI,CAACI,KAAK,CAACH,IAAI,EAAEC,EAAE,CAAC;IACjCJ,MAAM,CAACO,MAAM,GAAGX,CAAC,IAAIY,YAAY,CAACZ,CAAC,CAAC;IACpCI,MAAM,CAACS,aAAa,CAACJ,IAAI,CAAC;EAC9B;EAEA,SAASG,YAAYA,CAACE,WAAW,EAAC;IAC9B,MAAMR,IAAI,GAAGf,KAAK,CAACE,gBAAgB,CAAC;IACpC,MAAMsB,IAAI,GAAGD,WAAW,CAACE,MAAM,CAACC,MAAM;IACtC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,GAAG,CAAC,MAAM,EAAEd,IAAI,CAACe,IAAI,CAAC;IAC7BH,MAAM,CAACE,GAAG,CAAC,MAAM,EAAEd,IAAI,CAACgB,IAAI,CAAC;IAC7BJ,MAAM,CAACE,GAAG,CAAC,oBAAoB,EAAEvB,iBAAiB,CAAC;IACnDqB,MAAM,CAACE,GAAG,CAAC,YAAY,EAAEG,IAAI,CAACC,IAAI,CAAClB,IAAI,CAACgB,IAAI,GAAGpC,SAAS,CAAC,CAAC;IAC1D,MAAMuC,OAAO,GAAG;MAAC,cAAc,EAAE;IAA0B,CAAC;IAC5D,MAAMC,GAAG,GAAG,8BAA8B,GAACR,MAAM,CAACS,QAAQ,CAAC,CAAC;IAC5D9C,KAAK,CAAC+C,IAAI,CAACF,GAAG,EAAEX,IAAI,EAAC;MAACU;IAAO,CAAC,CAAC;IAC3BI,IAAI,CAACC,QAAQ,IAAI,CAEjB,CAAC,CAAC;EACV;EAEAnD,SAAS,CAAC,MAAK;IACX,IAAIY,KAAK,CAACwC,MAAM,GAAG,CAAC,EAAC;MACjB,IAAItC,gBAAgB,KAAK,IAAI,EAAC;QAC1BC,mBAAmB,CACfC,mBAAmB,KAAK,IAAI,GAAG,CAAC,GAAGA,mBAAmB,GAAG,CAC7D,CAAC;MACL;IACJ;EACJ,CAAC,EAAC,CAACJ,KAAK,CAACwC,MAAM,CAAC,CAAC;EAEjBpD,SAAS,CAAC,MAAM;IACZ,IAAIc,gBAAgB,KAAK,IAAI,EAAC;MAC1BK,qBAAqB,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACL,gBAAgB,CAAC,CAAC;EAEtBd,SAAS,CAAC,MAAM;IACZ,IAAIqD,kBAAkB,KAAI,IAAI,EAAC,CAE/B;EACJ,CAAC,CAAC;EACF,oBACAjD,OAAA,CAAAE,SAAA;IAAAgD,QAAA,gBACAlD,OAAA;MAAQmD,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACtBlD,OAAA;QAAKmD,SAAS,EAAC,WAAW;QAAAD,QAAA,eACtBlD,OAAA;UAAImD,SAAS,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACTvD,OAAA;MAAMmD,SAAS,EAAC,WAAW;MAAAD,QAAA,eACvBlD,OAAA;QAAKmD,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACrBlD,OAAA;UAAOwD,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9BvD,OAAA;UAAO0D,OAAO,EAAC,MAAM;UAAEP,SAAS,EAAC,KAAK;UAACM,EAAE,EAAC,WAAW;UAAAP,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClEvD,OAAA;UAAK2D,UAAU,EAAE1C,CAAC,IAAI;YAACV,iBAAiB,CAAC,IAAI,CAAC;YAAEU,CAAC,CAACC,cAAc,CAAC,CAAC;UAAC,CAAE;UACjE0C,WAAW,EAAE3C,CAAC,IAAI;YAACV,iBAAiB,CAAC,KAAK,CAAC;YAAEU,CAAC,CAACC,cAAc,CAAC,CAAC;UAAC,CAAE;UAClE2C,MAAM,EAAE5C,CAAC,IAAID,UAAU,CAACC,CAAC,CAAE;UAC3BkC,SAAS,EAAG,WAAW,IAAI7C,cAAc,GAAG,QAAQ,GAAG,EAAE,CAAE;UAAA4C,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAAAlD,EAAA,CAjFKD,IAAI;AAAA0D,EAAA,GAAJ1D,IAAI;AAmFV,eAAeA,IAAI;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}